<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <display-name>Archetype Created Web Application</display-name>
  
   
  <!-- contextConfigLocation을 사용하면 ContextLoader가 load할 수 있는 설정파일을 여러개 등록 가능하다.
		아래 예시를 보면 one-context.xml과 two-context.xml 설정파일 2개를 참고하여 컨텍스트를 생성하게된다.
		contextConfigLocation을 따로 지정하지 않으면 /WEB-INF/applicationContext.xml을 디폴트 설정파일로 보게된다.
   -->
   	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		/WEB-INF/one-context.xml
		/WEB-INF/two-context.xml
		</param-value>
	</context-param>


  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  
  <!--  서블릿컨텍스트가 참조할 설정파일을 contextConfigLocation을 이용하여 설정해준다.
   -->
  <servlet>
  	<servlet-name>start</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>/WEB-INF/end-servlet.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>start</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
</web-app>